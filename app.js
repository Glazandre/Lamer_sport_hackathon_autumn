// –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–∏–∞—Ç–ª–æ–Ω–∞
class PolyathlonApp {
    constructor() {
        this.db = database;
        this.init();
    }

    init() {
        this.setupEventListeners();
        this.updateDisplay();
        this.updateStats();

        console.log('üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–∏–∞—Ç–ª–æ–Ω–∞ –∑–∞–ø—É—â–µ–Ω–æ!');
        this.showNotification('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!', 'success');
    }

    setupEventListeners() {
        // –§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞
        document.getElementById('registration-form').addEventListener('submit', (e) => {
            e.preventDefault();
            this.registerParticipant();
        });

        // –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        document.getElementById('results-form').addEventListener('submit', (e) => {
            e.preventDefault();
            this.saveResult();
        });

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞
        document.getElementById('refresh-rating').addEventListener('click', () => {
            this.updateRating();
        });

        // –§–∏–ª—å—Ç—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ
        document.getElementById('category-filter').addEventListener('change', () => {
            this.updateRating();
        });

        // –ù–∞–≤–∏–≥–∞—Ü–∏—è
        document.querySelectorAll('.nav-link').forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const targetId = e.target.getAttribute('href').substring(1);
                this.scrollToSection(targetId);
            });
        });
    }

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
    registerParticipant() {
        const formData = {
            full_name: document.getElementById('full-name').value.trim(),
            birth_date: document.getElementById('birth-date').value,
            gender: document.getElementById('gender').value,
            category: document.getElementById('category').value,
            organization: document.getElementById('organization').value.trim(),
            contact_phone: document.getElementById('phone').value.trim(),
            email: document.getElementById('email').value.trim()
        };

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!formData.full_name || !formData.birth_date || !formData.gender || !formData.category || !formData.organization) {
            this.showNotification('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!', 'error');
            return;
        }

        try {
            const newParticipant = this.db.addParticipant(formData);
            this.showNotification(`‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫ ${newParticipant.full_name} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º ${newParticipant.number}!`, 'success');

            // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
            document.getElementById('registration-form').reset();

            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            this.updateDisplay();
            this.updateStats();

        } catch (error) {
            this.showNotification(`‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${error.message}`, 'error');
        }
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    saveResult() {
        const participantId = parseInt(document.getElementById('participant-select').value);
        const discipline = document.getElementById('discipline').value;
        const resultText = document.getElementById('result').value.trim();
        const points = parseInt(document.getElementById('points').value) || 0;

        if (!participantId || !discipline || !resultText) {
            this.showNotification('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!', 'error');
            return;
        }

        // –ü–∞—Ä—Å–∏–º —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        const resultValue = this.parseResultValue(resultText, discipline);

        const resultData = {
            participant_id: participantId,
            discipline: discipline,
            result_value: resultValue,
            result_text: resultText,
            points: points
        };

        try {
            const newResult = this.db.addResult(resultData);
            this.showNotification('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!', 'success');

            // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
            document.getElementById('results-form').reset();

            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            this.updateDisplay();
            this.updateStats();

        } catch (error) {
            this.showNotification(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${error.message}`, 'error');
        }
    }

    // –ü–∞—Ä—Å–∏–Ω–≥ —á–∏—Å–ª–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    parseResultValue(resultText, discipline) {
        // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ—á–∏—Å–ª–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ —Ç–æ—á–∫–∏ –∏ –¥–≤–æ–µ—Ç–æ—á–∏—è
        const cleanText = resultText.replace(/[^\d.:]/g, '');

        if (discipline === 'running-100m' || discipline === 'swimming-100m') {
            // –î–ª—è –≤—Ä–µ–º–µ–Ω–∏: "12.5" -> 12.5, "1:08.2" -> 68.2
            if (cleanText.includes(':')) {
                const [minutes, seconds] = cleanText.split(':');
                return parseFloat(minutes) * 60 + parseFloat(seconds);
            }
            return parseFloat(cleanText);
        } else if (discipline === 'shooting' || discipline === 'pull-ups') {
            // –î–ª—è –æ—á–∫–æ–≤ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞: –ø—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ
            return parseInt(cleanText) || 0;
        }

        return 0;
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    updateDisplay() {
        this.updateParticipantsTable();
        this.updateParticipantSelect();
        this.updateResultsTable();
        this.updateRating();
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    updateParticipantsTable() {
        const participants = this.db.getAllParticipants();
        const tableBody = document.getElementById('participants-table');

        tableBody.innerHTML = '';

        if (participants.length === 0) {
            const row = document.createElement('tr');
            row.innerHTML = `<td colspan="6" style="text-align: center; color: #666;">–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</td>`;
            tableBody.appendChild(row);
            return;
        }

        participants.forEach(participant => {
            const row = document.createElement('tr');

            const categoryIcon = participant.gender === 'female' ? 'üë©' : 'üë®';
            const categoryText = this.getCategoryText(participant.category);

            row.innerHTML = `
                <td>${participant.number}</td>
                <td>${participant.full_name}</td>
                <td>${participant.organization}</td>
                <td>${categoryIcon} ${categoryText}</td>
                <td>${participant.contact_phone || '-'}</td>
                <td>
                    <button class="btn-secondary" onclick="app.deleteParticipant(${participant.id})" title="–£–¥–∞–ª–∏—Ç—å">
                        üóëÔ∏è
                    </button>
                </td>
            `;
            tableBody.appendChild(row);
        });
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    updateParticipantSelect() {
        const participants = this.db.getAllParticipants();
        const select = document.getElementById('participant-select');

        select.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞</option>';

        participants.forEach(participant => {
            const option = document.createElement('option');
            option.value = participant.id;
            option.textContent = `#${participant.number} - ${participant.full_name} (${this.getCategoryText(participant.category)})`;
            select.appendChild(option);
        });
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    updateResultsTable() {
        const results = this.db.getAllResults();
        const participants = this.db.getAllParticipants();
        const tableBody = document.getElementById('results-table');

        tableBody.innerHTML = '';

        if (results.length === 0) {
            const row = document.createElement('tr');
            row.innerHTML = `<td colspan="6" style="text-align: center; color: #666;">–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</td>`;
            tableBody.appendChild(row);
            return;
        }

        results.forEach(result => {
            const participant = participants.find(p => p.id === result.participant_id);
            const discipline = this.db.getDiscipline(result.discipline);

            if (participant && discipline) {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>#${participant.number} ${participant.full_name}</td>
                    <td>${discipline.name}</td>
                    <td>${result.result_text}</td>
                    <td>${result.points || 0}</td>
                    <td>${new Date(result.created_at).toLocaleDateString()}</td>
                    <td>
                        <button class="btn-secondary" onclick="app.deleteResult(${result.id})" title="–£–¥–∞–ª–∏—Ç—å">
                            üóëÔ∏è
                        </button>
                    </td>
                `;
                tableBody.appendChild(row);
            }
        });
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞
    updateRating() {
        const categoryFilter = document.getElementById('category-filter').value;
        const ratingData = this.db.calculateRating(categoryFilter);
        const tableBody = document.getElementById('rating-table');

        tableBody.innerHTML = '';

        if (ratingData.length === 0) {
            const row = document.createElement('tr');
            row.innerHTML = `<td colspan="8" style="text-align: center; color: #666;">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞</td>`;
            tableBody.appendChild(row);
            return;
        }

        ratingData.forEach((item, index) => {
            const row = document.createElement('tr');

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ–¥–∞–ª—å
            let medal = '';
            if (index === 0) medal = '<span class="medal-gold">ü•á 1</span>';
            else if (index === 1) medal = '<span class="medal-silver">ü•à 2</span>';
            else if (index === 2) medal = '<span class="medal-bronze">ü•â 3</span>';
            else medal = (index + 1).toString();

            const participant = item.participant;

            row.innerHTML = `
                <td>${medal}</td>
                <td>#${participant.number} ${participant.full_name}</td>
                <td>${this.getCategoryText(participant.category)}</td>
                <td>${item.results.running ? item.results.running.result_text : '-'}</td>
                <td>${item.results.swimming ? item.results.swimming.result_text : '-'}</td>
                <td>${item.results.shooting ? item.results.shooting.result_text : '-'}</td>
                <td>${item.results.pullups ? item.results.pullups.result_text : '-'}</td>
                <td><strong>${item.totalPoints}</strong></td>
            `;
            tableBody.appendChild(row);
        });
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    updateStats() {
        const stats = this.db.getStats();

        document.getElementById('stat-participants').textContent = stats.participants;
        document.getElementById('stat-results').textContent = stats.results;
        document.getElementById('stat-teams').textContent = stats.teams;
        document.getElementById('stat-disciplines').textContent = stats.disciplines;
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞
    deleteParticipant(participantId) {
        const participant = this.db.getParticipant(participantId);
        if (participant && confirm(`–£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${participant.full_name}? –í—Å–µ –µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–∞–∫–∂–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.`)) {
            this.db.deleteParticipant(participantId);
            this.showNotification('üóëÔ∏è –£—á–∞—Å—Ç–Ω–∏–∫ —É–¥–∞–ª–µ–Ω', 'success');
            this.updateDisplay();
            this.updateStats();
        }
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    deleteResult(resultId) {
        if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç?')) {
            this.db.deleteResult(resultId);
            this.showNotification('üóëÔ∏è –†–µ–∑—É–ª—å—Ç–∞—Ç —É–¥–∞–ª–µ–Ω', 'success');
            this.updateDisplay();
            this.updateStats();
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    getCategoryText(category) {
        const categories = {
            'men': '–ú—É–∂—á–∏–Ω—ã',
            'women': '–ñ–µ–Ω—â–∏–Ω—ã',
            'juniors': '–Æ–Ω–∏–æ—Ä—ã',
            'veterans': '–í–µ—Ç–µ—Ä–∞–Ω—ã'
        };
        return categories[category] || category;
    }

    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å–µ–∫—Ü–∏–∏
    scrollToSection(sectionId) {
        const section = document.getElementById(sectionId);
        if (section) {
            section.scrollIntoView({ behavior: 'smooth' });
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification(message, type = 'success') {
        this.db.showNotification(message, type);
    }

    // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (–∑–∞–≥–ª—É—à–∫–∞)
    downloadDocument(type) {
        const documents = {
            'rules': 'rules.pdf',
            'protocols': 'protocol_forms.zip',
            'judges_guide': 'judges_guide.pdf'
        };

        this.showNotification(`üì• –ù–∞—á–∞—Ç–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ: ${documents[type]}`, 'success');
    }

    // –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
    exportData() {
        if (this.db.exportData()) {
            this.showNotification('üì§ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!', 'success');
        }
    }

    // –°–±—Ä–æ—Å –∫ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º
    resetToDemoData() {
        this.db.resetToDemoData();
    }

    // –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
    exportFullReport() {
        if (this.db.exportFullReport()) {
            this.showNotification('üìä –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ CSV!', 'success');
        }
    }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–æ–≥–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
let app;
document.addEventListener('DOMContentLoaded', () => {
    app = new PolyathlonApp();
});